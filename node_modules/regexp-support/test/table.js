"use strict";
/**
 * Created by user on 2018/5/7/007.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const unicode_script_1 = require("../lib/pattern/charset/unicode-script");
const unicode_1 = require("../lib/pattern/charset/unicode");
const util = require("util");
util.inspect.defaultOptions.colors = true;
let tests = [
    '„Äå',
    '‚Ä¶',
    '‚Äª',
    'Ôºü',
    'Ôº∂',
    'Ôºï',
    //'!',
    'üëßüëßüëßüèª',
    'üèΩ',
    'üòÄ',
    '„Ç´„Çø„Ç´„Éä',
    ...('!"#$%&\'()*+,-./:;<=>?@[\\]^_`{|}~'.split('')),
    '·àõ·äï·ã£·â†·â¢·ã´',
    '‡¶Ü‡¶Æ‡¶æ‡¶∞',
    '·ÉÆ·Éù·Éõ·Éê·Éö·Éì·Éò',
    '–ª–µ—Ç–∞—á–∫–æ',
    'c√°nh',
    '‰∏≠ÊñáÂ≠óÁ¨¶',
    'ŸÑŸÖŸà',
    "\n", ".", "\t", "\r", "\f",
    " ", "-", "!", "¬ª", "‚Ä∫", "‚Äπ", "¬´",
    "Õ≥", "Œò", "Œ£", "œ™", "–ñ", "ÿ§",
    "‡º¨", "‡º∫", "‡ºº", "‡ΩÑ", "‚Éì", "‚úÑ",
    "‚ü™", "„ÇÑ", "„Çô",
    "+", "‚Üí", "‚àë", "‚à¢", "‚Äª", "‚Åâ", "‚ßì", "‚ßª",
    "‚ë™", "‚íÑ", "‚í∞", "‚ìõ", "‚ì∂",
    "\u0300" /* COMBINING GRAVE ACCENT, Mn */,
    "\u0BCD" /* TAMIL SIGN VIRAMA, Me */,
    "\u20DD" /* COMBINING ENCLOSING CIRCLE, Me */,
    "\u2166" /* ROMAN NUMERAL SEVEN, Nl */,
];
Object.keys(unicode_1.UNICODE_ALL)
    .forEach(function (name) {
    let k = unicode_1.wrapToRegexName(name);
    let r;
    try {
        r = new RegExp(`^${k}+$`, 'u');
    }
    catch (e) {
        console.log(k, false);
        return;
    }
    //console.log(r);
    let ret = tests.find(function (text) {
        return r.test(text);
    });
    if (typeof ret != 'undefined') {
        console.log(r, ret, toHex(ret.codePointAt(0)));
    }
});
Object.keys(unicode_script_1.UNICODE_SCRIPTS_ALL)
    .forEach(function (name) {
    let k = unicode_script_1.wrapToRegexName(name);
    let r;
    try {
        r = new RegExp(`^${k}+$`, 'u');
    }
    catch (e) {
        console.log(k, false);
        return;
    }
    //console.log(r);
    let ret = tests.find(function (text) {
        return r.test(text);
    });
    if (typeof ret != 'undefined') {
        console.log(r, ret, toHex(ret.codePointAt(0)));
    }
});
function toHex(n) {
    return n.toString(16).padStart(4, '0');
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFibGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJ0YWJsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7O0dBRUc7O0FBRUgsMEVBQWlIO0FBQ2pILDREQUF1RjtBQU12Riw2QkFBNkI7QUFFN0IsSUFBSSxDQUFDLE9BQU8sQ0FBQyxjQUFjLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQztBQUUxQyxJQUFJLEtBQUssR0FBRztJQUVYLEdBQUc7SUFDSCxHQUFHO0lBQ0gsR0FBRztJQUVILEdBQUc7SUFDSCxHQUFHO0lBQ0gsR0FBRztJQUVILE1BQU07SUFFTixVQUFVO0lBQ1YsSUFBSTtJQUVKLElBQUk7SUFFSixNQUFNO0lBRU4sR0FBRyxDQUFDLG9DQUFvQyxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUVuRCxRQUFRO0lBQ1IsTUFBTTtJQUNOLFNBQVM7SUFDVCxTQUFTO0lBQ1QsTUFBTTtJQUNOLE1BQU07SUFFTixLQUFLO0lBRUwsSUFBSSxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsSUFBSSxFQUFFLElBQUk7SUFDM0IsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRztJQUNqQyxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUc7SUFDNUIsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHO0lBQzVCLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRztJQUNiLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHO0lBQ3RDLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHO0lBQ3ZCLFFBQVEsQ0FBQyxnQ0FBZ0M7SUFDekMsUUFBUSxDQUFDLDJCQUEyQjtJQUNwQyxRQUFRLENBQUMsb0NBQW9DO0lBQzdDLFFBQVEsQ0FBQyw2QkFBNkI7Q0FFdEMsQ0FBQztBQUVGLE1BQU0sQ0FBQyxJQUFJLENBQUMscUJBQVcsQ0FBQztLQUN0QixPQUFPLENBQUMsVUFBVSxJQUFJO0lBRXRCLElBQUksQ0FBQyxHQUFHLHlCQUFlLENBQUMsSUFBSSxDQUFDLENBQUM7SUFFOUIsSUFBSSxDQUFTLENBQUM7SUFFZCxJQUNBO1FBQ0MsQ0FBQyxHQUFHLElBQUksTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsR0FBRyxDQUFDLENBQUM7S0FDL0I7SUFDRCxPQUFPLENBQUMsRUFDUjtRQUNDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFLEtBQUssQ0FBQyxDQUFDO1FBQ3RCLE9BQU87S0FDUDtJQUVELGlCQUFpQjtJQUVqQixJQUFJLEdBQUcsR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFDLFVBQVUsSUFBSTtRQUVsQyxPQUFPLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDckIsQ0FBQyxDQUFDLENBQUM7SUFFSCxJQUFJLE9BQU8sR0FBRyxJQUFJLFdBQVcsRUFDN0I7UUFDQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxHQUFHLEVBQUUsS0FBSyxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0tBQy9DO0FBRUYsQ0FBQyxDQUFDLENBQ0Y7QUFFRCxNQUFNLENBQUMsSUFBSSxDQUFDLG9DQUFtQixDQUFDO0tBQzlCLE9BQU8sQ0FBQyxVQUFVLElBQUk7SUFFdEIsSUFBSSxDQUFDLEdBQUcsZ0NBQWdCLENBQUMsSUFBSSxDQUFDLENBQUM7SUFFL0IsSUFBSSxDQUFTLENBQUM7SUFFZCxJQUNBO1FBQ0MsQ0FBQyxHQUFHLElBQUksTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsR0FBRyxDQUFDLENBQUM7S0FDL0I7SUFDRCxPQUFPLENBQUMsRUFDUjtRQUNDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFLEtBQUssQ0FBQyxDQUFDO1FBQ3RCLE9BQU87S0FDUDtJQUVELGlCQUFpQjtJQUVqQixJQUFJLEdBQUcsR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFDLFVBQVUsSUFBSTtRQUVsQyxPQUFPLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDckIsQ0FBQyxDQUFDLENBQUM7SUFFSCxJQUFJLE9BQU8sR0FBRyxJQUFJLFdBQVcsRUFDN0I7UUFDQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsRUFBRSxHQUFHLEVBQUUsS0FBSyxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0tBQy9DO0FBRUYsQ0FBQyxDQUFDLENBQ0Y7QUFFRCxTQUFTLEtBQUssQ0FBQyxDQUFTO0lBRXZCLE9BQU8sQ0FBQyxDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFBO0FBQ3ZDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENyZWF0ZWQgYnkgdXNlciBvbiAyMDE4LzUvNy8wMDcuXG4gKi9cblxuaW1wb3J0IHsgVU5JQ09ERV9TQ1JJUFRTX0FMTCwgd3JhcFRvUmVnZXhOYW1lIGFzIHdyYXBUb1JlZ2V4TmFtZTIgfSBmcm9tICcuLi9saWIvcGF0dGVybi9jaGFyc2V0L3VuaWNvZGUtc2NyaXB0JztcbmltcG9ydCB7IFVOSUNPREUsIFVOSUNPREVfQUxMLCB3cmFwVG9SZWdleE5hbWUgfSBmcm9tICcuLi9saWIvcGF0dGVybi9jaGFyc2V0L3VuaWNvZGUnO1xuaW1wb3J0IENBQ0hFX0JMT0NLUyBmcm9tICcuLi9saWIvcGF0dGVybi9jYWNoZS9ibG9ja3MnO1xuaW1wb3J0IENBQ0hFX0NBVEVHT1JJRVMsIHsgTkFNRV9BTElBUyB9IGZyb20gJy4uL2xpYi9wYXR0ZXJuL2NhY2hlL2NhdGVnb3JpZXMnO1xuaW1wb3J0IENBQ0hFX1BST1BFUlRJRVMgZnJvbSAnLi4vbGliL3BhdHRlcm4vY2FjaGUvcHJvcGVydGllcyc7XG5pbXBvcnQgQ0FDSEVfU0NSSVBUUyBmcm9tICcuLi9saWIvcGF0dGVybi9jYWNoZS9zY3JpcHRzJztcblxuaW1wb3J0ICogYXMgdXRpbCBmcm9tIFwidXRpbFwiO1xuXG51dGlsLmluc3BlY3QuZGVmYXVsdE9wdGlvbnMuY29sb3JzID0gdHJ1ZTtcblxubGV0IHRlc3RzID0gW1xuXG5cdCfjgIwnLFxuXHQn4oCmJyxcblx0J+KAuycsXG5cblx0J++8nycsXG5cdCfvvLYnLFxuXHQn77yVJyxcblxuXHQvLychJyxcblxuXHQn8J+Rp/Cfkafwn5Gn8J+PuycsXG5cdCfwn4+9JyxcblxuXHQn8J+YgCcsXG5cblx0J+OCq+OCv+OCq+ODiicsXG5cblx0Li4uKCchXCIjJCUmXFwnKCkqKywtLi86Ozw9Pj9AW1xcXFxdXl9ge3x9ficuc3BsaXQoJycpKSxcblxuXHQn4Yib4YqV4Yuj4Ymg4Ymi4YurJyxcblx0J+CmhuCmruCmvuCmsCcsXG5cdCfhg67hg53hg5vhg5Dhg5rhg5Phg5gnLFxuXHQn0LvQtdGC0LDRh9C60L4nLFxuXHQnY8OhbmgnLFxuXHQn5Lit5paH5a2X56ymJyxcblxuXHQn2YTZhdmIJyxcblxuXHRcIlxcblwiLCBcIi5cIiwgXCJcXHRcIiwgXCJcXHJcIiwgXCJcXGZcIixcblx0XCIgXCIsIFwiLVwiLCBcIiFcIiwgXCLCu1wiLCBcIuKAulwiLCBcIuKAuVwiLCBcIsKrXCIsXG5cdFwizbNcIiwgXCLOmFwiLCBcIs6jXCIsIFwiz6pcIiwgXCLQllwiLCBcItikXCIsXG5cdFwi4LysXCIsIFwi4Ly6XCIsIFwi4Ly8XCIsIFwi4L2EXCIsIFwi4oOTXCIsIFwi4pyEXCIsXG5cdFwi4p+qXCIsIFwi44KEXCIsIFwi44KZXCIsXG5cdFwiK1wiLCBcIuKGklwiLCBcIuKIkVwiLCBcIuKIolwiLCBcIuKAu1wiLCBcIuKBiVwiLCBcIuKnk1wiLCBcIuKnu1wiLFxuXHRcIuKRqlwiLCBcIuKShFwiLCBcIuKSsFwiLCBcIuKTm1wiLCBcIuKTtlwiLFxuXHRcIlxcdTAzMDBcIiAvKiBDT01CSU5JTkcgR1JBVkUgQUNDRU5ULCBNbiAqLyxcblx0XCJcXHUwQkNEXCIgLyogVEFNSUwgU0lHTiBWSVJBTUEsIE1lICovLFxuXHRcIlxcdTIwRERcIiAvKiBDT01CSU5JTkcgRU5DTE9TSU5HIENJUkNMRSwgTWUgKi8sXG5cdFwiXFx1MjE2NlwiIC8qIFJPTUFOIE5VTUVSQUwgU0VWRU4sIE5sICovLFxuXG5dO1xuXG5PYmplY3Qua2V5cyhVTklDT0RFX0FMTClcblx0LmZvckVhY2goZnVuY3Rpb24gKG5hbWUpXG5cdHtcblx0XHRsZXQgayA9IHdyYXBUb1JlZ2V4TmFtZShuYW1lKTtcblxuXHRcdGxldCByOiBSZWdFeHA7XG5cblx0XHR0cnlcblx0XHR7XG5cdFx0XHRyID0gbmV3IFJlZ0V4cChgXiR7a30rJGAsICd1Jyk7XG5cdFx0fVxuXHRcdGNhdGNoIChlKVxuXHRcdHtcblx0XHRcdGNvbnNvbGUubG9nKGssIGZhbHNlKTtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHQvL2NvbnNvbGUubG9nKHIpO1xuXG5cdFx0bGV0IHJldCA9IHRlc3RzLmZpbmQoZnVuY3Rpb24gKHRleHQpXG5cdFx0e1xuXHRcdFx0cmV0dXJuIHIudGVzdCh0ZXh0KTtcblx0XHR9KTtcblxuXHRcdGlmICh0eXBlb2YgcmV0ICE9ICd1bmRlZmluZWQnKVxuXHRcdHtcblx0XHRcdGNvbnNvbGUubG9nKHIsIHJldCwgdG9IZXgocmV0LmNvZGVQb2ludEF0KDApKSk7XG5cdFx0fVxuXG5cdH0pXG47XG5cbk9iamVjdC5rZXlzKFVOSUNPREVfU0NSSVBUU19BTEwpXG5cdC5mb3JFYWNoKGZ1bmN0aW9uIChuYW1lKVxuXHR7XG5cdFx0bGV0IGsgPSB3cmFwVG9SZWdleE5hbWUyKG5hbWUpO1xuXG5cdFx0bGV0IHI6IFJlZ0V4cDtcblxuXHRcdHRyeVxuXHRcdHtcblx0XHRcdHIgPSBuZXcgUmVnRXhwKGBeJHtrfSskYCwgJ3UnKTtcblx0XHR9XG5cdFx0Y2F0Y2ggKGUpXG5cdFx0e1xuXHRcdFx0Y29uc29sZS5sb2coaywgZmFsc2UpO1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdC8vY29uc29sZS5sb2cocik7XG5cblx0XHRsZXQgcmV0ID0gdGVzdHMuZmluZChmdW5jdGlvbiAodGV4dClcblx0XHR7XG5cdFx0XHRyZXR1cm4gci50ZXN0KHRleHQpO1xuXHRcdH0pO1xuXG5cdFx0aWYgKHR5cGVvZiByZXQgIT0gJ3VuZGVmaW5lZCcpXG5cdFx0e1xuXHRcdFx0Y29uc29sZS5sb2cociwgcmV0LCB0b0hleChyZXQuY29kZVBvaW50QXQoMCkpKTtcblx0XHR9XG5cblx0fSlcbjtcblxuZnVuY3Rpb24gdG9IZXgobjogbnVtYmVyKVxue1xuXHRyZXR1cm4gbi50b1N0cmluZygxNikucGFkU3RhcnQoNCwgJzAnKVxufVxuIl19