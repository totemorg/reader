"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const mod_1 = require("../mod");
const COLORS_1 = require("../mod/COLORS");
/**
 * 把一些错认为名词的词标注为形容词，或者对名词作定语的情况
 */
class AdjectiveOptimizer extends mod_1.SubSModuleOptimizer {
    constructor() {
        super(...arguments);
        this.name = 'AdjectiveOptimizer';
    }
    doOptimize(words) {
        const POSTAG = this._POSTAG;
        let index = 0;
        while (index < words.length) {
            const word = words[index];
            const nextword = words[index + 1];
            if (nextword) {
                // 对于<颜色>+<的>，直接判断颜色是形容词（字典里颜色都是名词）
                if (nextword.p & POSTAG.D_U && COLORS_1.COLOR_ALL[word.w]) {
                    word.op = word.op || word.p;
                    word.p |= POSTAG.D_A;
                    this.debugToken(word, {
                        [this.name]: true,
                    });
                }
                // 如果是连续的两个名词，前一个是颜色，那这个颜色也是形容词
                if (word.p & POSTAG.D_N && this.isNominal(nextword.p) && COLORS_1.COLOR_ALL[word.w]) {
                    word.op = word.op || word.p;
                    word.p |= POSTAG.D_A;
                    word.p |= POSTAG.D_N;
                    this.debugToken(word, {
                        [this.name]: true,
                    });
                }
            }
            // 移到下一个单词
            index += 1;
        }
        return words;
    }
    isNominal(pos) {
        /*
        if (Array.isArray(pos))
        {
            return this.isNominal(pos[0]);
        }
        */
        const POSTAG = this._POSTAG;
        return (pos === POSTAG.D_N ||
            pos === POSTAG.A_NT ||
            pos === POSTAG.A_NX ||
            pos === POSTAG.A_NZ ||
            pos === POSTAG.A_NR ||
            pos === POSTAG.A_NS ||
            pos === POSTAG.URL);
    }
}
exports.AdjectiveOptimizer = AdjectiveOptimizer;
exports.init = AdjectiveOptimizer.init.bind(AdjectiveOptimizer);
exports.default = AdjectiveOptimizer;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQWRqZWN0aXZlT3B0aW1pemVyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQWRqZWN0aXZlT3B0aW1pemVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsZ0NBQXlEO0FBR3pELDBDQUEwQztBQUcxQzs7R0FFRztBQUNILE1BQWEsa0JBQW1CLFNBQVEseUJBQW1CO0lBQTNEOztRQUVDLFNBQUksR0FBRyxvQkFBb0IsQ0FBQztJQTZEN0IsQ0FBQztJQTNEQSxVQUFVLENBQUMsS0FBbUI7UUFFN0IsTUFBTSxNQUFNLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQztRQUM1QixJQUFJLEtBQUssR0FBRyxDQUFDLENBQUM7UUFDZCxPQUFPLEtBQUssR0FBRyxLQUFLLENBQUMsTUFBTSxFQUMzQjtZQUNDLE1BQU0sSUFBSSxHQUFHLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUMxQixNQUFNLFFBQVEsR0FBRyxLQUFLLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQyxDQUFDO1lBQ2xDLElBQUksUUFBUSxFQUNaO2dCQUNDLG1DQUFtQztnQkFDbkMsSUFBSSxRQUFRLENBQUMsQ0FBQyxHQUFHLE1BQU0sQ0FBQyxHQUFHLElBQUksa0JBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQ2hEO29CQUNDLElBQUksQ0FBQyxFQUFFLEdBQUcsSUFBSSxDQUFDLEVBQUUsSUFBSSxJQUFJLENBQUMsQ0FBQyxDQUFDO29CQUM1QixJQUFJLENBQUMsQ0FBQyxJQUFJLE1BQU0sQ0FBQyxHQUFHLENBQUM7b0JBRXJCLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxFQUFFO3dCQUNyQixDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxJQUFJO3FCQUNqQixDQUFDLENBQUM7aUJBQ0g7Z0JBRUQsK0JBQStCO2dCQUMvQixJQUFJLElBQUksQ0FBQyxDQUFDLEdBQUcsTUFBTSxDQUFDLEdBQUcsSUFBSSxJQUFJLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsSUFBSSxrQkFBUyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFDMUU7b0JBQ0MsSUFBSSxDQUFDLEVBQUUsR0FBRyxJQUFJLENBQUMsRUFBRSxJQUFJLElBQUksQ0FBQyxDQUFDLENBQUM7b0JBQzVCLElBQUksQ0FBQyxDQUFDLElBQUksTUFBTSxDQUFDLEdBQUcsQ0FBQztvQkFDckIsSUFBSSxDQUFDLENBQUMsSUFBSSxNQUFNLENBQUMsR0FBRyxDQUFDO29CQUVyQixJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksRUFBRTt3QkFDckIsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsSUFBSTtxQkFDakIsQ0FBQyxDQUFDO2lCQUNIO2FBQ0Q7WUFDRCxVQUFVO1lBQ1YsS0FBSyxJQUFJLENBQUMsQ0FBQztTQUNYO1FBQ0QsT0FBTyxLQUFLLENBQUM7SUFDZCxDQUFDO0lBRUQsU0FBUyxDQUFDLEdBQXNCO1FBRS9COzs7OztVQUtFO1FBRUYsTUFBTSxNQUFNLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQztRQUM1QixPQUFPLENBQ04sR0FBRyxLQUFLLE1BQU0sQ0FBQyxHQUFHO1lBQ2xCLEdBQUcsS0FBSyxNQUFNLENBQUMsSUFBSTtZQUNuQixHQUFHLEtBQUssTUFBTSxDQUFDLElBQUk7WUFDbkIsR0FBRyxLQUFLLE1BQU0sQ0FBQyxJQUFJO1lBQ25CLEdBQUcsS0FBSyxNQUFNLENBQUMsSUFBSTtZQUNuQixHQUFHLEtBQUssTUFBTSxDQUFDLElBQUk7WUFDbkIsR0FBRyxLQUFLLE1BQU0sQ0FBQyxHQUFHLENBQ2xCLENBQUM7SUFDSCxDQUFDO0NBQ0Q7QUEvREQsZ0RBK0RDO0FBRVksUUFBQSxJQUFJLEdBQUcsa0JBQWtCLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxrQkFBa0IsQ0FBbUMsQ0FBQztBQUV2RyxrQkFBZSxrQkFBa0IsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFN1YlNNb2R1bGUsIFN1YlNNb2R1bGVPcHRpbWl6ZXIgfSBmcm9tICcuLi9tb2QnO1xuaW1wb3J0IFNlZ21lbnQsIHsgSVdvcmQgfSBmcm9tICcuLi9TZWdtZW50JztcblxuaW1wb3J0IHsgQ09MT1JfQUxMIH0gZnJvbSAnLi4vbW9kL0NPTE9SUyc7XG5pbXBvcnQgeyBJV29yZERlYnVnIH0gZnJvbSAnLi4vdXRpbCc7XG5cbi8qKlxuICog5oqK5LiA5Lqb6ZSZ6K6k5Li65ZCN6K+N55qE6K+N5qCH5rOo5Li65b2i5a656K+N77yM5oiW6ICF5a+55ZCN6K+N5L2c5a6a6K+t55qE5oOF5Ya1XG4gKi9cbmV4cG9ydCBjbGFzcyBBZGplY3RpdmVPcHRpbWl6ZXIgZXh0ZW5kcyBTdWJTTW9kdWxlT3B0aW1pemVyXG57XG5cdG5hbWUgPSAnQWRqZWN0aXZlT3B0aW1pemVyJztcblxuXHRkb09wdGltaXplKHdvcmRzOiBJV29yZERlYnVnW10pOiBJV29yZERlYnVnW11cblx0e1xuXHRcdGNvbnN0IFBPU1RBRyA9IHRoaXMuX1BPU1RBRztcblx0XHRsZXQgaW5kZXggPSAwO1xuXHRcdHdoaWxlIChpbmRleCA8IHdvcmRzLmxlbmd0aClcblx0XHR7XG5cdFx0XHRjb25zdCB3b3JkID0gd29yZHNbaW5kZXhdO1xuXHRcdFx0Y29uc3QgbmV4dHdvcmQgPSB3b3Jkc1tpbmRleCArIDFdO1xuXHRcdFx0aWYgKG5leHR3b3JkKVxuXHRcdFx0e1xuXHRcdFx0XHQvLyDlr7nkuo486aKc6ImyPis855qEPu+8jOebtOaOpeWIpOaWreminOiJsuaYr+W9ouWuueivje+8iOWtl+WFuOmHjOminOiJsumDveaYr+WQjeivje+8iVxuXHRcdFx0XHRpZiAobmV4dHdvcmQucCAmIFBPU1RBRy5EX1UgJiYgQ09MT1JfQUxMW3dvcmQud10pXG5cdFx0XHRcdHtcblx0XHRcdFx0XHR3b3JkLm9wID0gd29yZC5vcCB8fCB3b3JkLnA7XG5cdFx0XHRcdFx0d29yZC5wIHw9IFBPU1RBRy5EX0E7XG5cblx0XHRcdFx0XHR0aGlzLmRlYnVnVG9rZW4od29yZCwge1xuXHRcdFx0XHRcdFx0W3RoaXMubmFtZV06IHRydWUsXG5cdFx0XHRcdFx0fSk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyDlpoLmnpzmmK/ov57nu63nmoTkuKTkuKrlkI3or43vvIzliY3kuIDkuKrmmK/popzoibLvvIzpgqPov5nkuKrpopzoibLkuZ/mmK/lvaLlrrnor41cblx0XHRcdFx0aWYgKHdvcmQucCAmIFBPU1RBRy5EX04gJiYgdGhpcy5pc05vbWluYWwobmV4dHdvcmQucCkgJiYgQ09MT1JfQUxMW3dvcmQud10pXG5cdFx0XHRcdHtcblx0XHRcdFx0XHR3b3JkLm9wID0gd29yZC5vcCB8fCB3b3JkLnA7XG5cdFx0XHRcdFx0d29yZC5wIHw9IFBPU1RBRy5EX0E7XG5cdFx0XHRcdFx0d29yZC5wIHw9IFBPU1RBRy5EX047XG5cblx0XHRcdFx0XHR0aGlzLmRlYnVnVG9rZW4od29yZCwge1xuXHRcdFx0XHRcdFx0W3RoaXMubmFtZV06IHRydWUsXG5cdFx0XHRcdFx0fSk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdC8vIOenu+WIsOS4i+S4gOS4quWNleivjVxuXHRcdFx0aW5kZXggKz0gMTtcblx0XHR9XG5cdFx0cmV0dXJuIHdvcmRzO1xuXHR9XG5cblx0aXNOb21pbmFsKHBvczogbnVtYmVyIHwgbnVtYmVyW10pOiBib29sZWFuXG5cdHtcblx0XHQvKlxuXHRcdGlmIChBcnJheS5pc0FycmF5KHBvcykpXG5cdFx0e1xuXHRcdFx0cmV0dXJuIHRoaXMuaXNOb21pbmFsKHBvc1swXSk7XG5cdFx0fVxuXHRcdCovXG5cblx0XHRjb25zdCBQT1NUQUcgPSB0aGlzLl9QT1NUQUc7XG5cdFx0cmV0dXJuIChcblx0XHRcdHBvcyA9PT0gUE9TVEFHLkRfTiB8fFxuXHRcdFx0cG9zID09PSBQT1NUQUcuQV9OVCB8fFxuXHRcdFx0cG9zID09PSBQT1NUQUcuQV9OWCB8fFxuXHRcdFx0cG9zID09PSBQT1NUQUcuQV9OWiB8fFxuXHRcdFx0cG9zID09PSBQT1NUQUcuQV9OUiB8fFxuXHRcdFx0cG9zID09PSBQT1NUQUcuQV9OUyB8fFxuXHRcdFx0cG9zID09PSBQT1NUQUcuVVJMXG5cdFx0KTtcblx0fVxufVxuXG5leHBvcnQgY29uc3QgaW5pdCA9IEFkamVjdGl2ZU9wdGltaXplci5pbml0LmJpbmQoQWRqZWN0aXZlT3B0aW1pemVyKSBhcyB0eXBlb2YgQWRqZWN0aXZlT3B0aW1pemVyLmluaXQ7XG5cbmV4cG9ydCBkZWZhdWx0IEFkamVjdGl2ZU9wdGltaXplclxuIl19