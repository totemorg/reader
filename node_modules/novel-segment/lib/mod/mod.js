"use strict";
/**
 * Created by user on 2018/2/21/021.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const debug_1 = require("../util/debug");
class SModule {
    /**
     * @param {Segment} segment 分词接口
     */
    constructor(segment) {
        this.segment = segment;
    }
    _doMethod(fn, target, mods, ...argv) {
        mods.forEach(function (mod) {
            // @ts-ignore
            if (typeof mod._cache == 'function') {
                // @ts-ignore
                mod._cache();
            }
            target = mod[fn](target, ...argv);
        });
        return target;
    }
}
exports.SModule = SModule;
class SubSModule {
    constructor(type, segment, ...argv) {
        if (type) {
            this.type = type;
        }
        if (!this.type) {
            throw new Error();
        }
        if (segment) {
            this.init(segment, ...argv);
            this.inited = true;
        }
    }
    static init(segment, ...argv) {
        // @ts-ignore
        return this._init(this, segment, ...argv);
    }
    static _init(libThis, segment, ...argv) {
        if (!libThis.type) {
            throw new Error();
        }
        let mod = new libThis(libThis.type, segment, ...argv);
        if (!mod.inited) {
            mod.init(segment, ...argv);
            mod.inited = true;
        }
        // @ts-ignore
        return mod;
    }
    init(segment, ...argv) {
        this.segment = segment;
        this.inited = true;
        //this._cache();
        return this;
    }
    _cache(...argv) {
        this._POSTAG = this.segment.POSTAG;
    }
    /**
     * 回傳最簡版的 IWord { w, p, f, s }
     */
    createRawToken(data, ow, attr) {
        // @ts-ignore
        ow = ow || {};
        let nw = {
            w: typeof data.w == 'undefined' ? ow.w : data.w,
            p: typeof data.p == 'undefined' ? ow.p : data.p,
            f: typeof data.f == 'undefined' ? ow.f : data.f,
            s: typeof data.s == 'undefined' ? ow.s : data.s,
        };
        if (attr) {
            this.debugToken(nw, attr);
        }
        return nw;
    }
    createToken(data, skipCheck, attr) {
        let TABLE = this._TABLE;
        if (!skipCheck && TABLE && !(data.w in TABLE)) {
            this.debugToken(data, {
                autoCreate: true,
            });
        }
        // 自動將模組名稱血入 debug 資訊
        if (this.name) {
            attr = Object.assign(attr || {});
            if (!(this.name in attr)) {
                // @ts-ignore
                attr[this.name] = true;
            }
        }
        if (attr) {
            this.debugToken(data, attr);
        }
        return data;
    }
    sliceToken(words, pos, len, data, skipCheck, attr) {
        words.splice(pos, len, this.createToken(data, skipCheck, attr));
        return words;
    }
    debugToken(data, attr, returnToken, ...argv) {
        return debug_1.debugToken(data, attr, returnToken, ...argv);
    }
}
exports.SubSModule = SubSModule;
exports.default = exports;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsibW9kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQTs7R0FFRzs7QUFLSCx5Q0FBMEM7QUFLMUMsTUFBYSxPQUFPO0lBS25COztPQUVHO0lBQ0gsWUFBWSxPQUFnQjtRQUUzQixJQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztJQUN4QixDQUFDO0lBRVMsU0FBUyxDQUF5QyxFQUFVLEVBQUUsTUFBVyxFQUFFLElBQVMsRUFBRSxHQUFHLElBQUk7UUFFdEcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxVQUFVLEdBQUc7WUFFekIsYUFBYTtZQUNiLElBQUksT0FBTyxHQUFHLENBQUMsTUFBTSxJQUFJLFVBQVUsRUFDbkM7Z0JBQ0MsYUFBYTtnQkFDYixHQUFHLENBQUMsTUFBTSxFQUFFLENBQUM7YUFDYjtZQUVELE1BQU0sR0FBRyxHQUFHLENBQUMsRUFBRSxDQUFDLENBQUMsTUFBTSxFQUFFLEdBQUcsSUFBSSxDQUFDLENBQUM7UUFDbkMsQ0FBQyxDQUFDLENBQUM7UUFDSCxPQUFPLE1BQU0sQ0FBQztJQUNmLENBQUM7Q0FDRDtBQTVCRCwwQkE0QkM7QUFFRCxNQUFhLFVBQVU7SUFrQnRCLFlBQVksSUFBbUIsRUFBRSxPQUFpQixFQUFFLEdBQUcsSUFBSTtRQUUxRCxJQUFJLElBQUksRUFDUjtZQUNDLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1NBQ2pCO1FBRUQsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQ2Q7WUFDQyxNQUFNLElBQUksS0FBSyxFQUFFLENBQUE7U0FDakI7UUFFRCxJQUFJLE9BQU8sRUFDWDtZQUNDLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLEdBQUcsSUFBSSxDQUFDLENBQUM7WUFDNUIsSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7U0FDbkI7SUFDRixDQUFDO0lBRU0sTUFBTSxDQUFDLElBQUksQ0FBb0MsT0FBZ0IsRUFBRSxHQUFHLElBQUk7UUFFOUUsYUFBYTtRQUNiLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsT0FBTyxFQUFFLEdBQUcsSUFBSSxDQUFDLENBQUM7SUFDM0MsQ0FBQztJQUVTLE1BQU0sQ0FBQyxLQUFLLENBQXVCLE9BQXlCLEVBQUUsT0FBZ0IsRUFBRSxHQUFHLElBQUk7UUFFaEcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLEVBQ2pCO1lBQ0MsTUFBTSxJQUFJLEtBQUssRUFBRSxDQUFBO1NBQ2pCO1FBRUQsSUFBSSxHQUFHLEdBQUcsSUFBSSxPQUFPLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxPQUFPLEVBQUUsR0FBRyxJQUFJLENBQUMsQ0FBQztRQUV0RCxJQUFJLENBQUMsR0FBRyxDQUFDLE1BQU0sRUFDZjtZQUNDLEdBQUcsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLEdBQUcsSUFBSSxDQUFDLENBQUM7WUFDM0IsR0FBRyxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUM7U0FDbEI7UUFFRCxhQUFhO1FBQ2IsT0FBTyxHQUFHLENBQUM7SUFDWixDQUFDO0lBRU0sSUFBSSxDQUFDLE9BQWdCLEVBQUUsR0FBRyxJQUFJO1FBRXBDLElBQUksQ0FBQyxPQUFPLEdBQUcsT0FBTyxDQUFDO1FBQ3ZCLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDO1FBRW5CLGdCQUFnQjtRQUVoQixPQUFPLElBQUksQ0FBQztJQUNiLENBQUM7SUFFUyxNQUFNLENBQUMsR0FBRyxJQUFJO1FBRXZCLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUM7SUFDcEMsQ0FBQztJQUVEOztPQUVHO0lBQ08sY0FBYyxDQUE2RCxJQUFPLEVBQUUsRUFBdUIsRUFBRSxJQUF5QjtRQUUvSSxhQUFhO1FBQ2IsRUFBRSxHQUFHLEVBQUUsSUFBSSxFQUFFLENBQUM7UUFFZCxJQUFJLEVBQUUsR0FBRztZQUNSLENBQUMsRUFBRSxPQUFPLElBQUksQ0FBQyxDQUFDLElBQUksV0FBVyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUMvQyxDQUFDLEVBQUUsT0FBTyxJQUFJLENBQUMsQ0FBQyxJQUFJLFdBQVcsQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUM7WUFDL0MsQ0FBQyxFQUFFLE9BQU8sSUFBSSxDQUFDLENBQUMsSUFBSSxXQUFXLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQy9DLENBQUMsRUFBRSxPQUFPLElBQUksQ0FBQyxDQUFDLElBQUksV0FBVyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQztTQUMxQyxDQUFDO1FBRVAsSUFBSSxJQUFJLEVBQ1I7WUFDQyxJQUFJLENBQUMsVUFBVSxDQUFDLEVBQUUsRUFBRSxJQUFJLENBQUMsQ0FBQztTQUMxQjtRQUVELE9BQU8sRUFBRSxDQUFDO0lBQ1gsQ0FBQztJQUVTLFdBQVcsQ0FBNkQsSUFBTyxFQUFFLFNBQW1CLEVBQUUsSUFBeUI7UUFFeEksSUFBSSxLQUFLLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQztRQUV4QixJQUFJLENBQUMsU0FBUyxJQUFJLEtBQUssSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsSUFBSSxLQUFLLENBQUMsRUFDN0M7WUFDQyxJQUFJLENBQUMsVUFBVSxDQUFDLElBQUksRUFBRTtnQkFDckIsVUFBVSxFQUFFLElBQUk7YUFDaEIsQ0FBQyxDQUFDO1NBQ0g7UUFFRCxxQkFBcUI7UUFDckIsSUFBSSxJQUFJLENBQUMsSUFBSSxFQUNiO1lBQ0MsSUFBSSxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxJQUFJLEVBQUUsQ0FBQyxDQUFDO1lBRWpDLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLElBQUksSUFBSSxDQUFDLEVBQ3hCO2dCQUNDLGFBQWE7Z0JBQ2IsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxJQUFJLENBQUM7YUFDdkI7U0FDRDtRQUVELElBQUksSUFBSSxFQUNSO1lBQ0MsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLEVBQUUsSUFBSSxDQUFDLENBQUM7U0FDNUI7UUFFRCxPQUFPLElBQUksQ0FBQztJQUNiLENBQUM7SUFFUyxVQUFVLENBQTRDLEtBQVUsRUFBRSxHQUFXLEVBQUUsR0FBVyxFQUFFLElBQU8sRUFBRSxTQUFtQixFQUFFLElBQXlCO1FBRTVKLEtBQUssQ0FBQyxNQUFNLENBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksRUFBRSxTQUFTLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQztRQUVoRSxPQUFPLEtBQUssQ0FBQztJQUNkLENBQUM7SUFFUyxVQUFVLENBQWlELElBQU8sRUFBRSxJQUF5QixFQUFFLFdBQWtCLEVBQUUsR0FBRyxJQUFJO1FBRW5JLE9BQU8sa0JBQVUsQ0FBQyxJQUFJLEVBQUUsSUFBSSxFQUFFLFdBQVcsRUFBRSxHQUFHLElBQUksQ0FBQyxDQUFDO0lBQ3JELENBQUM7Q0FDRDtBQTlJRCxnQ0E4SUM7QUF1Q0Qsa0JBQWUsT0FBaUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ3JlYXRlZCBieSB1c2VyIG9uIDIwMTgvMi8yMS8wMjEuXG4gKi9cblxuaW1wb3J0IHsgUE9TVEFHIH0gZnJvbSAnLi4vUE9TVEFHJztcbmltcG9ydCB7IElESUNULCBJRElDVF9CTEFDS0xJU1QsIElXb3JkLCBTZWdtZW50IH0gZnJvbSAnLi4vU2VnbWVudCc7XG5pbXBvcnQgeyBJV29yZERlYnVnLCBJV29yZERlYnVnSW5mbyB9IGZyb20gJy4uL3V0aWwvaW5kZXgnO1xuaW1wb3J0IHsgZGVidWdUb2tlbiB9IGZyb20gJy4uL3V0aWwvZGVidWcnXG5pbXBvcnQgeyBFTlVNX1NVQk1PRFNfTkFNRSB9IGZyb20gJy4vaW5kZXgnO1xuXG5leHBvcnQgdHlwZSBJU01vZHVsZVR5cGUgPSAnb3B0aW1pemVyJyB8ICd0b2tlbml6ZXInIHwgc3RyaW5nO1xuXG5leHBvcnQgY2xhc3MgU01vZHVsZSBpbXBsZW1lbnRzIElTTW9kdWxlXG57XG5cdHR5cGU/OiBJU01vZHVsZVR5cGU7XG5cdHNlZ21lbnQ6IFNlZ21lbnQ7XG5cblx0LyoqXG5cdCAqIEBwYXJhbSB7U2VnbWVudH0gc2VnbWVudCDliIbor43mjqXlj6Ncblx0ICovXG5cdGNvbnN0cnVjdG9yKHNlZ21lbnQ6IFNlZ21lbnQpXG5cdHtcblx0XHR0aGlzLnNlZ21lbnQgPSBzZWdtZW50O1xuXHR9XG5cblx0cHJvdGVjdGVkIF9kb01ldGhvZDxTIGV4dGVuZHMgSVdvcmQsIFQgZXh0ZW5kcyBJU3ViU01vZHVsZT4oZm46IHN0cmluZywgdGFyZ2V0OiBTW10sIG1vZHM6IFRbXSwgLi4uYXJndilcblx0e1xuXHRcdG1vZHMuZm9yRWFjaChmdW5jdGlvbiAobW9kKVxuXHRcdHtcblx0XHRcdC8vIEB0cy1pZ25vcmVcblx0XHRcdGlmICh0eXBlb2YgbW9kLl9jYWNoZSA9PSAnZnVuY3Rpb24nKVxuXHRcdFx0e1xuXHRcdFx0XHQvLyBAdHMtaWdub3JlXG5cdFx0XHRcdG1vZC5fY2FjaGUoKTtcblx0XHRcdH1cblxuXHRcdFx0dGFyZ2V0ID0gbW9kW2ZuXSh0YXJnZXQsIC4uLmFyZ3YpO1xuXHRcdH0pO1xuXHRcdHJldHVybiB0YXJnZXQ7XG5cdH1cbn1cblxuZXhwb3J0IGNsYXNzIFN1YlNNb2R1bGUgaW1wbGVtZW50cyBJU3ViU01vZHVsZVxue1xuXHRwdWJsaWMgc3RhdGljIHR5cGU6IElTTW9kdWxlVHlwZTtcblx0cHVibGljIHR5cGU6IElTTW9kdWxlVHlwZTtcblx0c2VnbWVudDogU2VnbWVudDtcblxuXHRwcmlvcml0eT86IG51bWJlcjtcblxuXHRpbml0ZWQ/OiBib29sZWFuO1xuXG5cdHB1YmxpYyBzdGF0aWMgTkFNRTogc3RyaW5nO1xuXHRwdWJsaWMgbmFtZTogc3RyaW5nO1xuXG5cdHByb3RlY3RlZCBfVEFCTEU/O1xuXHRwcm90ZWN0ZWQgX1BPU1RBRz86IHR5cGVvZiBQT1NUQUc7XG5cblx0cHJvdGVjdGVkIF9CTEFDS0xJU1Q/OiBJRElDVF9CTEFDS0xJU1Q7XG5cblx0Y29uc3RydWN0b3IodHlwZT86IElTTW9kdWxlVHlwZSwgc2VnbWVudD86IFNlZ21lbnQsIC4uLmFyZ3YpXG5cdHtcblx0XHRpZiAodHlwZSlcblx0XHR7XG5cdFx0XHR0aGlzLnR5cGUgPSB0eXBlO1xuXHRcdH1cblxuXHRcdGlmICghdGhpcy50eXBlKVxuXHRcdHtcblx0XHRcdHRocm93IG5ldyBFcnJvcigpXG5cdFx0fVxuXG5cdFx0aWYgKHNlZ21lbnQpXG5cdFx0e1xuXHRcdFx0dGhpcy5pbml0KHNlZ21lbnQsIC4uLmFyZ3YpO1xuXHRcdFx0dGhpcy5pbml0ZWQgPSB0cnVlO1xuXHRcdH1cblx0fVxuXG5cdHB1YmxpYyBzdGF0aWMgaW5pdDxUIGV4dGVuZHMgU3ViU01vZHVsZSA9IFN1YlNNb2R1bGU+KHNlZ21lbnQ6IFNlZ21lbnQsIC4uLmFyZ3YpOiBUXG5cdHtcblx0XHQvLyBAdHMtaWdub3JlXG5cdFx0cmV0dXJuIHRoaXMuX2luaXQodGhpcywgc2VnbWVudCwgLi4uYXJndik7XG5cdH1cblxuXHRwcm90ZWN0ZWQgc3RhdGljIF9pbml0PFQgZXh0ZW5kcyBTdWJTTW9kdWxlPihsaWJUaGlzOiBJTW9kdWxlU3RhdGljPFQ+LCBzZWdtZW50OiBTZWdtZW50LCAuLi5hcmd2KTogVFxuXHR7XG5cdFx0aWYgKCFsaWJUaGlzLnR5cGUpXG5cdFx0e1xuXHRcdFx0dGhyb3cgbmV3IEVycm9yKClcblx0XHR9XG5cblx0XHRsZXQgbW9kID0gbmV3IGxpYlRoaXMobGliVGhpcy50eXBlLCBzZWdtZW50LCAuLi5hcmd2KTtcblxuXHRcdGlmICghbW9kLmluaXRlZClcblx0XHR7XG5cdFx0XHRtb2QuaW5pdChzZWdtZW50LCAuLi5hcmd2KTtcblx0XHRcdG1vZC5pbml0ZWQgPSB0cnVlO1xuXHRcdH1cblxuXHRcdC8vIEB0cy1pZ25vcmVcblx0XHRyZXR1cm4gbW9kO1xuXHR9XG5cblx0cHVibGljIGluaXQoc2VnbWVudDogU2VnbWVudCwgLi4uYXJndilcblx0e1xuXHRcdHRoaXMuc2VnbWVudCA9IHNlZ21lbnQ7XG5cdFx0dGhpcy5pbml0ZWQgPSB0cnVlO1xuXG5cdFx0Ly90aGlzLl9jYWNoZSgpO1xuXG5cdFx0cmV0dXJuIHRoaXM7XG5cdH1cblxuXHRwcm90ZWN0ZWQgX2NhY2hlKC4uLmFyZ3YpXG5cdHtcblx0XHR0aGlzLl9QT1NUQUcgPSB0aGlzLnNlZ21lbnQuUE9TVEFHO1xuXHR9XG5cblx0LyoqXG5cdCAqIOWbnuWCs+acgOewoeeJiOeahCBJV29yZCB7IHcsIHAsIGYsIHMgfVxuXHQgKi9cblx0cHJvdGVjdGVkIGNyZWF0ZVJhd1Rva2VuPFQgZXh0ZW5kcyBJV29yZCwgVSBleHRlbmRzIElXb3JkRGVidWdJbmZvID0gSVdvcmREZWJ1Z0luZm8+KGRhdGE6IFQsIG93PzogUGFydGlhbDxUICYgSVdvcmQ+LCBhdHRyPzogVSAmIElXb3JkRGVidWdJbmZvKVxuXHR7XG5cdFx0Ly8gQHRzLWlnbm9yZVxuXHRcdG93ID0gb3cgfHwge307XG5cblx0XHRsZXQgbncgPSB7XG5cdFx0XHR3OiB0eXBlb2YgZGF0YS53ID09ICd1bmRlZmluZWQnID8gb3cudyA6IGRhdGEudyxcblx0XHRcdHA6IHR5cGVvZiBkYXRhLnAgPT0gJ3VuZGVmaW5lZCcgPyBvdy5wIDogZGF0YS5wLFxuXHRcdFx0ZjogdHlwZW9mIGRhdGEuZiA9PSAndW5kZWZpbmVkJyA/IG93LmYgOiBkYXRhLmYsXG5cdFx0XHRzOiB0eXBlb2YgZGF0YS5zID09ICd1bmRlZmluZWQnID8gb3cucyA6IGRhdGEucyxcblx0XHR9IGFzIFQ7XG5cblx0XHRpZiAoYXR0cilcblx0XHR7XG5cdFx0XHR0aGlzLmRlYnVnVG9rZW4obncsIGF0dHIpO1xuXHRcdH1cblxuXHRcdHJldHVybiBudztcblx0fVxuXG5cdHByb3RlY3RlZCBjcmVhdGVUb2tlbjxUIGV4dGVuZHMgSVdvcmQsIFUgZXh0ZW5kcyBJV29yZERlYnVnSW5mbyA9IElXb3JkRGVidWdJbmZvPihkYXRhOiBULCBza2lwQ2hlY2s/OiBib29sZWFuLCBhdHRyPzogVSAmIElXb3JkRGVidWdJbmZvKVxuXHR7XG5cdFx0bGV0IFRBQkxFID0gdGhpcy5fVEFCTEU7XG5cblx0XHRpZiAoIXNraXBDaGVjayAmJiBUQUJMRSAmJiAhKGRhdGEudyBpbiBUQUJMRSkpXG5cdFx0e1xuXHRcdFx0dGhpcy5kZWJ1Z1Rva2VuKGRhdGEsIHtcblx0XHRcdFx0YXV0b0NyZWF0ZTogdHJ1ZSxcblx0XHRcdH0pO1xuXHRcdH1cblxuXHRcdC8vIOiHquWLleWwh+aooee1hOWQjeeoseihgOWFpSBkZWJ1ZyDos4foqIpcblx0XHRpZiAodGhpcy5uYW1lKVxuXHRcdHtcblx0XHRcdGF0dHIgPSBPYmplY3QuYXNzaWduKGF0dHIgfHwge30pO1xuXG5cdFx0XHRpZiAoISh0aGlzLm5hbWUgaW4gYXR0cikpXG5cdFx0XHR7XG5cdFx0XHRcdC8vIEB0cy1pZ25vcmVcblx0XHRcdFx0YXR0clt0aGlzLm5hbWVdID0gdHJ1ZTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRpZiAoYXR0cilcblx0XHR7XG5cdFx0XHR0aGlzLmRlYnVnVG9rZW4oZGF0YSwgYXR0cik7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGRhdGE7XG5cdH1cblxuXHRwcm90ZWN0ZWQgc2xpY2VUb2tlbjxUIGV4dGVuZHMgSVdvcmQsIFUgZXh0ZW5kcyBJV29yZERlYnVnSW5mbz4od29yZHM6IFRbXSwgcG9zOiBudW1iZXIsIGxlbjogbnVtYmVyLCBkYXRhOiBULCBza2lwQ2hlY2s/OiBib29sZWFuLCBhdHRyPzogVSAmIElXb3JkRGVidWdJbmZvKVxuXHR7XG5cdFx0d29yZHMuc3BsaWNlKHBvcywgbGVuLCB0aGlzLmNyZWF0ZVRva2VuKGRhdGEsIHNraXBDaGVjaywgYXR0cikpO1xuXG5cdFx0cmV0dXJuIHdvcmRzO1xuXHR9XG5cblx0cHJvdGVjdGVkIGRlYnVnVG9rZW48VCBleHRlbmRzIElXb3JkRGVidWcsIFUgZXh0ZW5kcyBJV29yZERlYnVnSW5mbz4oZGF0YTogVCwgYXR0cj86IFUgJiBJV29yZERlYnVnSW5mbywgcmV0dXJuVG9rZW4/OiB0cnVlLCAuLi5hcmd2KVxuXHR7XG5cdFx0cmV0dXJuIGRlYnVnVG9rZW4oZGF0YSwgYXR0ciwgcmV0dXJuVG9rZW4sIC4uLmFyZ3YpO1xuXHR9XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgSVN1YlNNb2R1bGVNZXRob2Q8VCBleHRlbmRzIElXb3JkLCBVIGV4dGVuZHMgSVdvcmQgPSBUPlxue1xuXHQod29yZHM6IFRbXSwgLi4uYXJndik6IFVbXSxcbn1cblxuZXhwb3J0IGludGVyZmFjZSBJU3ViU01vZHVsZUNyZWF0ZTxUIGV4dGVuZHMgU3ViU01vZHVsZSwgUiBleHRlbmRzIFN1YlNNb2R1bGUgPSBTdWJTTW9kdWxlPlxue1xuXHQoc2VnbWVudDogU2VnbWVudCwgLi4uYXJndik6IFQgJiBSLFxufVxuXG5leHBvcnQgaW50ZXJmYWNlIElTTW9kdWxlXG57XG5cdHR5cGU/OiBJU01vZHVsZVR5cGUsXG5cdHNlZ21lbnQ6IFNlZ21lbnQsXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgSU1vZHVsZVN0YXRpYzxUIGV4dGVuZHMgSVNNb2R1bGUgfCBTdWJTTW9kdWxlPlxue1xuXHR0eXBlOiBJU01vZHVsZVR5cGU7XG5cblx0bmV3KHR5cGU/OiBJU01vZHVsZVR5cGUsIHNlZ21lbnQ/OiBTZWdtZW50LCAuLi5hcmd2KTogVCxcblxuXHRpbml0KHNlZ21lbnQ6IFNlZ21lbnQsIC4uLmFyZ3YpOiBULFxufVxuXG5leHBvcnQgaW50ZXJmYWNlIElTdWJTTW9kdWxlXG57XG5cdHR5cGU6IElTTW9kdWxlVHlwZSxcblx0c2VnbWVudDogU2VnbWVudCxcblxuXHRuYW1lPzogRU5VTV9TVUJNT0RTX05BTUUgfCBzdHJpbmc7XG5cblx0cHJpb3JpdHk/OiBudW1iZXI7XG5cblx0aW5pdChzZWdtZW50OiBTZWdtZW50LCAuLi5hcmd2KTogSVN1YlNNb2R1bGUsXG59XG5cbmV4cG9ydCBkZWZhdWx0IGV4cG9ydHMgYXMgdHlwZW9mIGltcG9ydCgnLi9tb2QnKTtcbiJdfQ==