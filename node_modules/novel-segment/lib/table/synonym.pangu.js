"use strict";
/**
 * Created by user on 2018/4/19/019.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const core_1 = require("./core");
/**
 * 原版 node-segment 的格式
 */
class TableDictSynonymPanGu extends core_1.default {
    constructor(type = TableDictSynonymPanGu.type, options = {}, ...argv) {
        super(type, options, ...argv);
    }
    add(data, skipExists) {
        if (!Array.isArray(data) || data.length != 2) {
            throw new TypeError(JSON.stringify(data));
        }
        data[0] = this._trim(data[0]);
        data[1] = this._trim(data[1]);
        if (!data[0]) {
            throw new TypeError(JSON.stringify(data));
        }
        if (skipExists && this.exists(data[0])) {
            return this;
        }
        this._add(data[0], data[1]);
        return this;
    }
    _add(n1, n2) {
        if (n1 !== n2) {
            this.TABLE[n1] = n2;
        }
        if (this.TABLE[n2] === n1) {
            delete this.TABLE[n2];
        }
    }
    _trim(s) {
        return s.replace(/^\s+|\s+$/g, '').trim();
    }
}
exports.TableDictSynonymPanGu = TableDictSynonymPanGu;
TableDictSynonymPanGu.type = 'SYNONYM';
exports.default = TableDictSynonymPanGu;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3lub255bS5wYW5ndS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbInN5bm9ueW0ucGFuZ3UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBOztHQUVHOztBQU1ILGlDQUF3RTtBQUV4RTs7R0FFRztBQUNILE1BQWEscUJBQXNCLFNBQVEsY0FBNkI7SUFJdkUsWUFBWSxPQUFlLHFCQUFxQixDQUFDLElBQUksRUFBRSxVQUFvQixFQUFFLEVBQUUsR0FBRyxJQUFJO1FBRXJGLEtBQUssQ0FBQyxJQUFJLEVBQUUsT0FBTyxFQUFFLEdBQUcsSUFBSSxDQUFDLENBQUE7SUFDOUIsQ0FBQztJQUVELEdBQUcsQ0FBQyxJQUFpQyxFQUFFLFVBQW9CO1FBRTFELElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxJQUFJLElBQUksQ0FBQyxNQUFNLElBQUksQ0FBQyxFQUM1QztZQUNDLE1BQU0sSUFBSSxTQUFTLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1NBQzFDO1FBRUQsSUFBSSxDQUFDLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDOUIsSUFBSSxDQUFDLENBQUMsQ0FBQyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFFOUIsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsRUFDWjtZQUNDLE1BQU0sSUFBSSxTQUFTLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO1NBQzFDO1FBRUQsSUFBSSxVQUFVLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFDdEM7WUFDQyxPQUFPLElBQUksQ0FBQztTQUNaO1FBRUQsSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFFNUIsT0FBTyxJQUFJLENBQUM7SUFDYixDQUFDO0lBRUQsSUFBSSxDQUFDLEVBQVUsRUFBRSxFQUFVO1FBRTFCLElBQUksRUFBRSxLQUFLLEVBQUUsRUFDYjtZQUNDLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLEdBQUcsRUFBRSxDQUFDO1NBQ3BCO1FBRUQsSUFBSSxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxLQUFLLEVBQUUsRUFDekI7WUFDQyxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLENBQUM7U0FDdEI7SUFDRixDQUFDO0lBRVMsS0FBSyxDQUFDLENBQVM7UUFFeEIsT0FBTyxDQUFDLENBQUMsT0FBTyxDQUFDLFlBQVksRUFBRSxFQUFFLENBQUMsQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUMzQyxDQUFDOztBQWxERixzREFvREM7QUFsRGdCLDBCQUFJLEdBQUcsU0FBUyxDQUFDO0FBb0RsQyxrQkFBZSxxQkFBcUIsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQ3JlYXRlZCBieSB1c2VyIG9uIDIwMTgvNC8xOS8wMTkuXG4gKi9cblxuaW1wb3J0IHsgSURJQ1RfU1lOT05ZTSwgSVdvcmQgfSBmcm9tICcuLi9TZWdtZW50JztcbmltcG9ydCB7IElEaWN0Um93IH0gZnJvbSAnc2VnbWVudC1kaWN0L2xpYi9sb2FkZXIvc2VnbWVudCc7XG5pbXBvcnQgQ2prQ29udiBmcm9tICdjamstY29udic7XG5pbXBvcnQgeyB0ZXh0X2xpc3QgfSBmcm9tICcuLi91dGlsL2Nqayc7XG5pbXBvcnQgQWJzdHJhY3RUYWJsZURpY3RDb3JlLCB7IElESUNULCBJRElDVDIsIElPcHRpb25zIH0gZnJvbSAnLi9jb3JlJztcblxuLyoqXG4gKiDljp/niYggbm9kZS1zZWdtZW50IOeahOagvOW8j1xuICovXG5leHBvcnQgY2xhc3MgVGFibGVEaWN0U3lub255bVBhbkd1IGV4dGVuZHMgQWJzdHJhY3RUYWJsZURpY3RDb3JlPHN0cmluZz5cbntcblx0c3RhdGljIHJlYWRvbmx5IHR5cGUgPSAnU1lOT05ZTSc7XG5cblx0Y29uc3RydWN0b3IodHlwZTogc3RyaW5nID0gVGFibGVEaWN0U3lub255bVBhbkd1LnR5cGUsIG9wdGlvbnM6IElPcHRpb25zID0ge30sIC4uLmFyZ3YpXG5cdHtcblx0XHRzdXBlcih0eXBlLCBvcHRpb25zLCAuLi5hcmd2KVxuXHR9XG5cblx0YWRkKGRhdGE6IFtzdHJpbmcsIHN0cmluZ10gJiBzdHJpbmdbXSwgc2tpcEV4aXN0cz86IGJvb2xlYW4pXG5cdHtcblx0XHRpZiAoIUFycmF5LmlzQXJyYXkoZGF0YSkgfHwgZGF0YS5sZW5ndGggIT0gMilcblx0XHR7XG5cdFx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKEpTT04uc3RyaW5naWZ5KGRhdGEpKTtcblx0XHR9XG5cblx0XHRkYXRhWzBdID0gdGhpcy5fdHJpbShkYXRhWzBdKTtcblx0XHRkYXRhWzFdID0gdGhpcy5fdHJpbShkYXRhWzFdKTtcblxuXHRcdGlmICghZGF0YVswXSlcblx0XHR7XG5cdFx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKEpTT04uc3RyaW5naWZ5KGRhdGEpKTtcblx0XHR9XG5cblx0XHRpZiAoc2tpcEV4aXN0cyAmJiB0aGlzLmV4aXN0cyhkYXRhWzBdKSlcblx0XHR7XG5cdFx0XHRyZXR1cm4gdGhpcztcblx0XHR9XG5cblx0XHR0aGlzLl9hZGQoZGF0YVswXSwgZGF0YVsxXSk7XG5cblx0XHRyZXR1cm4gdGhpcztcblx0fVxuXG5cdF9hZGQobjE6IHN0cmluZywgbjI6IHN0cmluZylcblx0e1xuXHRcdGlmIChuMSAhPT0gbjIpXG5cdFx0e1xuXHRcdFx0dGhpcy5UQUJMRVtuMV0gPSBuMjtcblx0XHR9XG5cblx0XHRpZiAodGhpcy5UQUJMRVtuMl0gPT09IG4xKVxuXHRcdHtcblx0XHRcdGRlbGV0ZSB0aGlzLlRBQkxFW24yXTtcblx0XHR9XG5cdH1cblxuXHRwcm90ZWN0ZWQgX3RyaW0oczogc3RyaW5nKVxuXHR7XG5cdFx0cmV0dXJuIHMucmVwbGFjZSgvXlxccyt8XFxzKyQvZywgJycpLnRyaW0oKTtcblx0fVxuXG59XG5cbmV4cG9ydCBkZWZhdWx0IFRhYmxlRGljdFN5bm9ueW1QYW5HdVxuIl19