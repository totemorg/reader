"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Created by user on 2019/7/26.
 */
const core_1 = require("./core");
const array_hyper_unique_1 = require("array-hyper-unique");
function _fromA2B(char, from, to, options = {}) {
    const _table = options && options.safe ? core_1.TABLE_SAFE : core_1.TABLE;
    if (_table[from] && _table[to]) {
        let list = [];
        if (_table[from][char]) {
            if (_table[from][char][to]) {
                list.push(_table[from][char][to]);
            }
            Object.values(_table[to])
                .forEach(row => {
                if (row[from] === char && row[to]) {
                    list.push(row[to]);
                }
            });
            if (options && options.includeSelf) {
                list.push(char);
            }
            list = array_hyper_unique_1.array_unique_overwrite(list);
        }
        return list;
    }
    throw new RangeError(`${from}, ${to} is not exists in TABLE`);
}
exports._fromA2B = _fromA2B;
function jp2zht(char, options) {
    return _fromA2B(char, core_1.KEY_JP, core_1.KEY_ZHT, options);
}
exports.jp2zht = jp2zht;
function jp2zhs(char, options) {
    return _fromA2B(char, core_1.KEY_JP, core_1.KEY_ZHS, options);
}
exports.jp2zhs = jp2zhs;
function zht2jp(char, options) {
    return _fromA2B(char, core_1.KEY_ZHT, core_1.KEY_JP, options);
}
exports.zht2jp = zht2jp;
function zhs2jp(char, options) {
    return _fromA2B(char, core_1.KEY_ZHS, core_1.KEY_JP, options);
}
exports.zhs2jp = zhs2jp;
function zh2jp(char, options) {
    let arr = zht2jp(char, options)
        .concat(zhs2jp(char, options));
    return array_hyper_unique_1.array_unique_overwrite(arr);
}
exports.zh2jp = zh2jp;
function jp2zh(char, options) {
    let arr = jp2zht(char, options)
        .concat(jp2zhs(char, options));
    return array_hyper_unique_1.array_unique_overwrite(arr);
}
exports.jp2zh = jp2zh;
function lazyAll(char, options) {
    let arr = zh2jp(char, options)
        .reduce((a, b) => {
        a.push(b, ...jp2zh(b, options));
        return a;
    }, [])
        .concat(jp2zh(char, options)
        .reduce((a, b) => {
        a.push(b, ...zh2jp(b, options));
        return a;
    }, []));
    return array_hyper_unique_1.array_unique_overwrite(arr);
}
exports.lazyAll = lazyAll;
exports.default = exports;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImxpc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7R0FFRztBQUNILGlDQUFtRjtBQUNuRiwyREFBNEQ7QUFRNUQsU0FBZ0IsUUFBUSxDQUFDLElBQVksRUFBRSxJQUFrQixFQUFFLEVBQWdCLEVBQUUsVUFBb0IsRUFBRTtJQUVsRyxNQUFNLE1BQU0sR0FBRyxPQUFPLElBQUksT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsaUJBQVUsQ0FBQyxDQUFDLENBQUMsWUFBSyxDQUFDO0lBRTVELElBQUksTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLE1BQU0sQ0FBQyxFQUFFLENBQUMsRUFDOUI7UUFDQyxJQUFJLElBQUksR0FBYSxFQUFFLENBQUM7UUFFeEIsSUFBSSxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLEVBQ3RCO1lBQ0MsSUFBSSxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQzFCO2dCQUNDLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7YUFDbEM7WUFFRCxNQUFNLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsQ0FBQztpQkFDdkIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxFQUFFO2dCQUVkLElBQUksR0FBRyxDQUFDLElBQUksQ0FBQyxLQUFLLElBQUksSUFBSSxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQ2pDO29CQUNDLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUM7aUJBQ25CO1lBRUYsQ0FBQyxDQUFDLENBQ0Y7WUFFRCxJQUFJLE9BQU8sSUFBSSxPQUFPLENBQUMsV0FBVyxFQUNsQztnQkFDQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO2FBQ2hCO1lBRUQsSUFBSSxHQUFHLDJDQUFzQixDQUFDLElBQUksQ0FBQyxDQUFDO1NBQ3BDO1FBRUQsT0FBTyxJQUFJLENBQUE7S0FDWDtJQUVELE1BQU0sSUFBSSxVQUFVLENBQUMsR0FBRyxJQUFJLEtBQUssRUFBRSx5QkFBeUIsQ0FBQyxDQUFBO0FBQzlELENBQUM7QUF0Q0QsNEJBc0NDO0FBRUQsU0FBZ0IsTUFBTSxDQUFDLElBQVksRUFBRSxPQUFrQjtJQUV0RCxPQUFPLFFBQVEsQ0FBQyxJQUFJLEVBQUUsYUFBTSxFQUFFLGNBQU8sRUFBRSxPQUFPLENBQUMsQ0FBQTtBQUNoRCxDQUFDO0FBSEQsd0JBR0M7QUFFRCxTQUFnQixNQUFNLENBQUMsSUFBWSxFQUFFLE9BQWtCO0lBRXRELE9BQU8sUUFBUSxDQUFDLElBQUksRUFBRSxhQUFNLEVBQUUsY0FBTyxFQUFFLE9BQU8sQ0FBQyxDQUFBO0FBQ2hELENBQUM7QUFIRCx3QkFHQztBQUVELFNBQWdCLE1BQU0sQ0FBQyxJQUFZLEVBQUUsT0FBa0I7SUFFdEQsT0FBTyxRQUFRLENBQUMsSUFBSSxFQUFFLGNBQU8sRUFBRSxhQUFNLEVBQUUsT0FBTyxDQUFDLENBQUE7QUFDaEQsQ0FBQztBQUhELHdCQUdDO0FBRUQsU0FBZ0IsTUFBTSxDQUFDLElBQVksRUFBRSxPQUFrQjtJQUV0RCxPQUFPLFFBQVEsQ0FBQyxJQUFJLEVBQUUsY0FBTyxFQUFFLGFBQU0sRUFBRSxPQUFPLENBQUMsQ0FBQTtBQUNoRCxDQUFDO0FBSEQsd0JBR0M7QUFFRCxTQUFnQixLQUFLLENBQUMsSUFBWSxFQUFFLE9BQWtCO0lBRXJELElBQUksR0FBRyxHQUFHLE1BQU0sQ0FBQyxJQUFJLEVBQUUsT0FBTyxDQUFDO1NBQzdCLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUM7SUFFaEMsT0FBTywyQ0FBc0IsQ0FBQyxHQUFHLENBQUMsQ0FBQTtBQUNuQyxDQUFDO0FBTkQsc0JBTUM7QUFFRCxTQUFnQixLQUFLLENBQUMsSUFBWSxFQUFFLE9BQWtCO0lBRXJELElBQUksR0FBRyxHQUFHLE1BQU0sQ0FBQyxJQUFJLEVBQUUsT0FBTyxDQUFDO1NBQzdCLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUM7SUFFaEMsT0FBTywyQ0FBc0IsQ0FBQyxHQUFHLENBQUMsQ0FBQTtBQUNuQyxDQUFDO0FBTkQsc0JBTUM7QUFFRCxTQUFnQixPQUFPLENBQUMsSUFBWSxFQUFFLE9BQWtCO0lBRXZELElBQUksR0FBRyxHQUFHLEtBQUssQ0FBQyxJQUFJLEVBQUUsT0FBTyxDQUFDO1NBQzVCLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUVoQixDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsRUFBRSxHQUFHLEtBQUssQ0FBQyxDQUFDLEVBQUUsT0FBTyxDQUFDLENBQUMsQ0FBQztRQUVoQyxPQUFPLENBQUMsQ0FBQztJQUNWLENBQUMsRUFBRSxFQUFjLENBQUM7U0FDakIsTUFBTSxDQUFDLEtBQUssQ0FBQyxJQUFJLEVBQUUsT0FBTyxDQUFDO1NBQzFCLE1BQU0sQ0FBQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRTtRQUVoQixDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsRUFBRSxHQUFHLEtBQUssQ0FBQyxDQUFDLEVBQUUsT0FBTyxDQUFDLENBQUMsQ0FBQztRQUVoQyxPQUFPLENBQUMsQ0FBQztJQUNWLENBQUMsRUFBRSxFQUFjLENBQUMsQ0FBQyxDQUNwQjtJQUVELE9BQU8sMkNBQXNCLENBQUMsR0FBRyxDQUFDLENBQUE7QUFDbkMsQ0FBQztBQW5CRCwwQkFtQkM7QUFFRCxrQkFBZSxPQUFrQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDcmVhdGVkIGJ5IHVzZXIgb24gMjAxOS83LzI2LlxuICovXG5pbXBvcnQgeyBUQUJMRSwgS0VZX0pQLCBLRVlfWkhULCBLRVlfWkhTLCBUQUJMRV9TQUZFLCBJS0VZX0ZST01fVE8gfSBmcm9tICcuL2NvcmUnO1xuaW1wb3J0IHsgYXJyYXlfdW5pcXVlX292ZXJ3cml0ZSB9IGZyb20gJ2FycmF5LWh5cGVyLXVuaXF1ZSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgSU9wdGlvbnNcbntcblx0c2FmZT86IGJvb2xlYW4sXG5cdGluY2x1ZGVTZWxmPzogYm9vbGVhbixcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIF9mcm9tQTJCKGNoYXI6IHN0cmluZywgZnJvbTogSUtFWV9GUk9NX1RPLCB0bzogSUtFWV9GUk9NX1RPLCBvcHRpb25zOiBJT3B0aW9ucyA9IHt9KVxue1xuXHRjb25zdCBfdGFibGUgPSBvcHRpb25zICYmIG9wdGlvbnMuc2FmZSA/IFRBQkxFX1NBRkUgOiBUQUJMRTtcblxuXHRpZiAoX3RhYmxlW2Zyb21dICYmIF90YWJsZVt0b10pXG5cdHtcblx0XHRsZXQgbGlzdDogc3RyaW5nW10gPSBbXTtcblxuXHRcdGlmIChfdGFibGVbZnJvbV1bY2hhcl0pXG5cdFx0e1xuXHRcdFx0aWYgKF90YWJsZVtmcm9tXVtjaGFyXVt0b10pXG5cdFx0XHR7XG5cdFx0XHRcdGxpc3QucHVzaChfdGFibGVbZnJvbV1bY2hhcl1bdG9dKTtcblx0XHRcdH1cblxuXHRcdFx0T2JqZWN0LnZhbHVlcyhfdGFibGVbdG9dKVxuXHRcdFx0XHQuZm9yRWFjaChyb3cgPT4ge1xuXG5cdFx0XHRcdFx0aWYgKHJvd1tmcm9tXSA9PT0gY2hhciAmJiByb3dbdG9dKVxuXHRcdFx0XHRcdHtcblx0XHRcdFx0XHRcdGxpc3QucHVzaChyb3dbdG9dKTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0fSlcblx0XHRcdDtcblxuXHRcdFx0aWYgKG9wdGlvbnMgJiYgb3B0aW9ucy5pbmNsdWRlU2VsZilcblx0XHRcdHtcblx0XHRcdFx0bGlzdC5wdXNoKGNoYXIpO1xuXHRcdFx0fVxuXG5cdFx0XHRsaXN0ID0gYXJyYXlfdW5pcXVlX292ZXJ3cml0ZShsaXN0KTtcblx0XHR9XG5cblx0XHRyZXR1cm4gbGlzdFxuXHR9XG5cblx0dGhyb3cgbmV3IFJhbmdlRXJyb3IoYCR7ZnJvbX0sICR7dG99IGlzIG5vdCBleGlzdHMgaW4gVEFCTEVgKVxufVxuXG5leHBvcnQgZnVuY3Rpb24ganAyemh0KGNoYXI6IHN0cmluZywgb3B0aW9ucz86IElPcHRpb25zKVxue1xuXHRyZXR1cm4gX2Zyb21BMkIoY2hhciwgS0VZX0pQLCBLRVlfWkhULCBvcHRpb25zKVxufVxuXG5leHBvcnQgZnVuY3Rpb24ganAyemhzKGNoYXI6IHN0cmluZywgb3B0aW9ucz86IElPcHRpb25zKVxue1xuXHRyZXR1cm4gX2Zyb21BMkIoY2hhciwgS0VZX0pQLCBLRVlfWkhTLCBvcHRpb25zKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gemh0MmpwKGNoYXI6IHN0cmluZywgb3B0aW9ucz86IElPcHRpb25zKVxue1xuXHRyZXR1cm4gX2Zyb21BMkIoY2hhciwgS0VZX1pIVCwgS0VZX0pQLCBvcHRpb25zKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gemhzMmpwKGNoYXI6IHN0cmluZywgb3B0aW9ucz86IElPcHRpb25zKVxue1xuXHRyZXR1cm4gX2Zyb21BMkIoY2hhciwgS0VZX1pIUywgS0VZX0pQLCBvcHRpb25zKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gemgyanAoY2hhcjogc3RyaW5nLCBvcHRpb25zPzogSU9wdGlvbnMpXG57XG5cdGxldCBhcnIgPSB6aHQyanAoY2hhciwgb3B0aW9ucylcblx0XHQuY29uY2F0KHpoczJqcChjaGFyLCBvcHRpb25zKSk7XG5cblx0cmV0dXJuIGFycmF5X3VuaXF1ZV9vdmVyd3JpdGUoYXJyKVxufVxuXG5leHBvcnQgZnVuY3Rpb24ganAyemgoY2hhcjogc3RyaW5nLCBvcHRpb25zPzogSU9wdGlvbnMpXG57XG5cdGxldCBhcnIgPSBqcDJ6aHQoY2hhciwgb3B0aW9ucylcblx0XHQuY29uY2F0KGpwMnpocyhjaGFyLCBvcHRpb25zKSk7XG5cblx0cmV0dXJuIGFycmF5X3VuaXF1ZV9vdmVyd3JpdGUoYXJyKVxufVxuXG5leHBvcnQgZnVuY3Rpb24gbGF6eUFsbChjaGFyOiBzdHJpbmcsIG9wdGlvbnM/OiBJT3B0aW9ucylcbntcblx0bGV0IGFyciA9IHpoMmpwKGNoYXIsIG9wdGlvbnMpXG5cdFx0LnJlZHVjZSgoYSwgYikgPT4ge1xuXG5cdFx0XHRhLnB1c2goYiwgLi4uanAyemgoYiwgb3B0aW9ucykpO1xuXG5cdFx0XHRyZXR1cm4gYTtcblx0XHR9LCBbXSBhcyBzdHJpbmdbXSlcblx0XHQuY29uY2F0KGpwMnpoKGNoYXIsIG9wdGlvbnMpXG5cdFx0XHQucmVkdWNlKChhLCBiKSA9PiB7XG5cblx0XHRcdFx0YS5wdXNoKGIsIC4uLnpoMmpwKGIsIG9wdGlvbnMpKTtcblxuXHRcdFx0XHRyZXR1cm4gYTtcblx0XHRcdH0sIFtdIGFzIHN0cmluZ1tdKSlcblx0O1xuXG5cdHJldHVybiBhcnJheV91bmlxdWVfb3ZlcndyaXRlKGFycilcbn1cblxuZXhwb3J0IGRlZmF1bHQgZXhwb3J0cyBhcyB0eXBlb2YgaW1wb3J0KCcuL2xpc3QnKTtcbiJdfQ==